#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Thu Jun 20 13:13:51 2019

@author: toma
"""

import MySQLdb

###############

def sql_order(query):
    #connect to the database
    db = MySQLdb.connect('localhost', 'toma', 'password', 'linelist') 
    #do put actual password when run
    
    #create a cursor object
    cursor = db.cursor()
    #create table 1 for particles
    #create the tables
    try: 
        #execute order in mysql
        cursor.execute(query)
        #commit changes
        db.commit()
    except: 
        #if errors occur
        db.rollback()
        
    finally: 
        #close up cursor and connections
        cursor.close()
        db.close()

################
        
#molecule_name format for example, CO2, is (13C)(16O)2
table1 = '''create table particles (molecule_name varchar(12) not null, \
iso_abundance float not null, molecular_mass float not null, particle_id \
int unsigned not null auto_increment primary key); '''

#create table 2 for all the lines for each particle in table 1
#nu stands for transition wavenumber
#a stands for einstein coefficient
#gp stands for the degeneracy of the lower state
#is gp good with smallint??? should H2 He stuff default as null or 0.0
table2 = '''create table lines (nu float not null, a float not null, \
gammar_air float not null, n_air float not null, delta_air float not null, \
elower float not null, gp smallint not null, gamma_H2 float not null default \
0.0, n_H2 float not null default 0.0, delta_H2 float not null default 0.0, \
gamma_He float not null default 0.0, n_He float not null default 0.0, \
delta_He float not null default 0.0, data_type enum('HITRAN', 'EXOMOL') not null, \
version varchar(10) not null, particle_id int not null, line_id int unsigned \
not null auto_increment primary key); '''

#create table 3 for the partition coefficient across all temperatures for each
#particle in table 1
#should temoerature in K be float or int? also partition
table3 = '''create table partitions (temp float not null, partition float not null, \
particle_id int not null, partition_id int unsigned not null auto_increment \
primary key); '''

#insert CO data into table particle
CO = '''insert into particles (molecule_name varchar(12) not null, \
iso_abundance float not null, molecular_mass float not null, particle_id \
int unsigned not null auto_increment primary key) \
values ('%s', '%d', '%d', '%d') ''' % ('(12C)(16O)', 0.986544, 27.994915)

##########################

def insert_hitran(filename): 
    #connect to the database
    db = MySQLdb.connect('localhost', 'toma', 'password', 'linelist') 
    #do put actual password when run
    
    #create a cursor object
    cursor = db.cursor()
    
    #insert the data of all lines for CO into table lines
    # with open('CO(copy).out') as infile: #
    try:
        #open the file
        infile = open(filename)
        for line in infile:
            data = line.split(' ')
            query = ('''insert into lines (nu float not null, a float not null, \
                                     gammar_air float not null, n_air float not null, delta_air float not null, \
                                     elower float not null, gp smallint not null, gamma_H2 float not null default \
                                     0.0, n_H2 float not null default 0.0, delta_H2 float not null default 0.0, \
                                     gamma_He float not null default 0.0, n_He float not null default 0.0, \
                                     delta_He float not null default 0.0, data_type enum('HITRAN', 'EXOMOL') not null, \
                                     version varchar(10) not null, particle_id int not null, line_id int unsigned \
                                     not null auto_increment primary key) values('%d', '%d', '%d', '%d', '%d',\
                                    '%d', '%d', '%d', '%d', '%d', '%d', '%d', '%d', '%s', '%s', '%d', '%d')''' \
                                    % (*data, 'HITRAN', '2012', 1)) #or this: (line, 'HITRAN', '2012', 1)
            cursor.execute(query)
        #maybe print the id each time to mnake sure it runs correctly?
        #commit changes
        db.commit()
        infile.close()
    except: 
        #if errors occur
        db.rollback()
    finally: 
        #close up cursor and connection
        cursor.close()
        db.close()
        
#################
        
def insert_exomol():
    pass

####################
        
def insert_partition(filename):
    #connect to the database
    db = MySQLdb.connect('localhost', 'toma', 'password', 'linelist') 
    #do put actual password when run
    
    #create a cursor object
    cursor = db.cursor()
    
    #insert all the pratition functions into the table
    try:
        #open the file
        infile = open(filename)
        for line in infile:
           data = line.split(' ')
           query = ('''insert into partitions (temp float not null, partition float not null, \ 
           particle_id int not null, partition_id int unsigned not null auto_increment \
           primary key) values('%d', '%d', '%d', '%d')''' % (*data, 1))
           cursor.execute(query) #maybe print the id each time to mnake sure it runs correctly?
        #commit changes
        db.commit()
        infile.close()
    except: 
        #if errors occur
        db.rollback()
    finally: 
        #close up cursor and connection
        cursor.close()
        db.close()

##################
        
def main():
    #create the tables
    #can i combine them? probably
    sql_order(table1)
    sql_order(table2)
    sql_order(table3)
    
    #insert CO data in table 1
    sql_order(CO)
    
    #insert the data of all lines for CO into table lines
    insert_hitran('/home/toma/Desktop/co_test.out')
    
    #insert all the pratition functions into the table
    insert_partition('/home/toma/Desktop/12C-16O__Li2015_partition.pf')
    
    
    
    
    
    
if __name__ == '__main__':
    main()
